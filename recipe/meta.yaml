{% set pymomentum_cpu_gpu = "pymomentum-gpu" %}  # [cuda_compiler_version != "None"]
{% set pymomentum_cpu_gpu = "pymomentum-cpu" %}  # [cuda_compiler_version == "None"]
{% set name = "momentum" %}
{% set version = "0.1.72" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/facebookresearch/momentum/archive/v{{ version }}.tar.gz
    sha256: 513171303d07ea6108684632181eb06c91abaefc13f1be2d7e528617a3cca9eb
    patches:
      - patches/0001-Fix-install-pymomentum-on-Windows.patch
      - patches/0002-Fix-rasterizer-test-segfaults-in-conda-forge-builds.patch

build:
  number: 1
  skip: true  # [py<312]

outputs:
  - name: momentum-cpp
    script: build_cpp.sh  # [unix]
    script: bld_cpp.bat  # [win]
    build:
      skip:
        - true  # [cuda_compiler_version != "None"]
      run_exports:
        - {{ pin_subpackage('momentum-cpp', max_pin='x.x') }}
      ignore_run_exports:
        - ceres-solver
        - drjit-cpp
        - gflags
        - openfbx
        - re2
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
        - libboost-devel
        - cmake
        - gtest  # [build_platform == target_platform]
        - indicators
        - ninja  # [not win]
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - ceres-solver
        - cli11
        - dispenso
        - drjit-cpp
        - eigen
        - ezc3d
        - fmt
        - fx-gltf
        - indicators
        # Replace with mdspan (https://github.com/conda-forge/staged-recipes/pull/31152)
        - kokkos
        - librerun-sdk {{ rerun_version }}
        - ms-gsl
        - nlohmann_json
        - openfbx
        # TODO: Remove verson constraint when upgrading rerun_version to >0.22
        - re2 {{ re2_version }}
        - spdlog
        - urdfdom
      run:
        - ceres-solver
        - cli11
        - dispenso
        - drjit-cpp
        - ezc3d
        - fx-gltf
        - indicators
        - librerun-sdk {{ rerun_version }}
        - gflags
        - libdeflate
        - ms-gsl
        - nlohmann_json
        - openfbx
        # TODO: Remove verson constraint when upgrading rerun_version to >0.22
        - re2 {{ re2_version }}
    test:
      script: run_test_cpp.sh  # [unix]
      script: run_test_cpp.bat  # [win]
      requires:
        - cmake
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - ninja  # [unix]
      files:
        - tests/
      commands:
        - test -f $PREFIX/lib/cmake/momentum/momentum-config.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\momentum\\momentum-config.cmake exit 1  # [win]
        - animate_shapes --help
        - c3d_viewer --help
        - convert_model --help
        - fbx_viewer --help
        - glb_viewer --help
        - hello_world
        - process_markers_app --help
        - refine_motion --help
        - urdf_viewer --help

  - name: pymomentum
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    build:
      string: cpu_py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
      string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
      skip: true  # [win and cuda_compiler_version != "None"]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
        {% if cuda_compiler_version != "None" %}
        - {{ compiler('cuda') }}
        - cuda-toolkit
        - nvtx-c
        {% endif %}
        - cmake
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - gtest
        - indicators
        - libboost-devel
        - make
        - ninja  # [not win]
        - pip
        - pybind11
        - python
        - pytorch
        - scikit-build-core
      host:
        # GPU requirements
        {% if cuda_compiler_version != "None" %}
        - cuda-version {{ cuda_compiler_version }}
        - cuda-toolkit
        - nvtx-c
        {% endif %}
        # other requirements
        - ceres-solver
        - cli11
        - dispenso
        - drjit-cpp
        - eigen
        - ezc3d
        - fmt
        - fx-gltf
        - indicators
        # Replace with mdspan (https://github.com/conda-forge/staged-recipes/pull/31152)
        - kokkos
        - librerun-sdk {{ rerun_version }}
        - libtorch
        - ms-gsl
        - nlohmann_json
        - numpy
        - openfbx
        - pip
        - python
        - pytorch
        # TODO: Remove verson constraint when upgrading rerun_version to >0.22
        - re2 {{ re2_version }}
        - scikit-build-core
        - spdlog
        - urdfdom
        - zlib
      run:
        - ezc3d
        - dispenso
        - fmt
        - gflags
        - indicators
        - libdeflate
        - pytorch
        - numpy
        - python
        # TODO: Remove verson constraint when upgrading rerun_version to >0.22
        - re2 {{ re2_version }}
        - spdlog
    test:
      imports:
        - pymomentum.backend
        - pymomentum.geometry
        - pymomentum.marker_tracking
        - pymomentum.quaternion
        - pymomentum.renderer
        - pymomentum.skel_state
        - pymomentum.solver
        - pymomentum.solver2
        - pymomentum.torch.character
        - pymomentum.trs        
      commands:
        - pip list
        - pip check
      requires:
        - pip

  {% set pymomentum_cpu_gpu = "pymomentum-cpu" %}   # [cuda_compiler_version == "None"]
  {% set pymomentum_cpu_gpu = "pymomentum-gpu" %}   # [cuda_compiler_version != "None"]
  - name: {{ pymomentum_cpu_gpu }}
    build:
      string: cpu_py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
      string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
      detect_binary_files_with_prefix: false
      skip: true  # [win and cuda_compiler_version != "None"]
    requirements:
      run:
        - {{ pin_subpackage("pymomentum", exact=True) }}

  - name: momentum
    build:
      run_exports:
        - {{ pin_subpackage('momentum-cpp', max_pin='x.x') }}
    requirements:
      run:
        - {{ pin_subpackage('momentum-cpp', exact=True) }}
        - {{ pin_subpackage('pymomentum', exact=True) }}
        - python

about:
  home: https://facebookresearch.github.io/momentum/
  summary: 'A library for human kinematic motion and numerical optimization solvers to apply human motion'
  description: |
    A library for human kinematic motion and numerical optimization solvers to apply human motion
  license: MIT
  license_file: LICENSE
  dev_url: https://github.com/facebookresearch/momentum

extra:
  recipe-maintainers:
    - jeongseok-meta
